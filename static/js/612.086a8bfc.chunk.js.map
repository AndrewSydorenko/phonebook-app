{"version":3,"file":"static/js/612.086a8bfc.chunk.js","mappings":"oOACaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,SAASC,KAA7B,EACtBC,EAAkB,SAAAJ,GAAK,OAAIA,EAAMC,UAAUC,SAASG,SAA7B,EACvBC,EAAc,SAAAN,GAAK,OAAIA,EAAMC,UAAUC,SAASK,KAA7B,EACnBC,EAAe,SAAAR,GAAK,OAAIA,EAAMC,UAAUQ,MAApB,EACpBC,GAAsBC,EAAAA,EAAAA,IAAe,CAACZ,EAAgBS,IAAe,SAACL,EAAOM,GACtF,OAAON,EAAMM,QAAO,SAAAG,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cAAcE,OAA7D,GAC9B,I,SCFKC,EAAaC,EAAAA,GAAAA,GAAH,0UAiBHC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXnB,GAAWoB,EAAAA,EAAAA,IAAYZ,GAK7B,OACE,SAACO,EAAD,UACGf,EAASqB,KAAI,SAAAX,GAAO,OACnB,0BACGA,EAAQC,KADX,KACmBD,EAAQY,QACzB,mBAAQC,KAAK,SAASC,QAAS,kBARlBC,EAQqCf,EAAQe,QAPhEP,GAASQ,EAAAA,EAAAA,IAAcD,IADJ,IAAAA,CAQkB,EAA/B,sBAFOf,EAAQe,GADE,KAU1B,ECpCKE,EAAaX,EAAAA,GAAAA,KAAH,8HAiDhB,EAzCqB,WACnB,IAAME,GAAWC,EAAAA,EAAAA,MACXnB,GAAWoB,EAAAA,EAAAA,IAAYvB,GAc7B,OACE,UAAC8B,EAAD,CAAYC,SAbG,SAAAC,GACfA,EAAMC,iBACN,IAAMnB,EAAOkB,EAAME,OAAOC,SAASrB,KAAKsB,MAClCX,EAASO,EAAME,OAAOC,SAASV,OAAOW,MACxCjC,EAASkC,MAAK,SAAAxB,GAAO,OAAIA,EAAQC,OAASA,CAArB,IACvBwB,MAAM,8BAENjB,GAASkB,EAAAA,EAAAA,IAAW,CAAEzB,KAAAA,EAAMW,OAAAA,KAE9BO,EAAME,OAAOM,OACd,EAGC,WACE,kBAAOC,QAAQ,GAAf,mBACA,kBACEf,KAAK,OACLZ,KAAK,OACL4B,YAAY,UACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,kBAAOJ,QAAQ,GAAf,qBACA,kBACEf,KAAK,MACLZ,KAAK,SACL4B,YAAY,oBACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,mBAAQnB,KAAK,SAAb,2BAGL,E,UChDYoB,EAAiB,WAC5B,IAAMzB,GAAWC,EAAAA,EAAAA,MACXZ,GAASa,EAAAA,EAAAA,IAAYd,GAM3B,OACE,0BACE,kBAAO2B,MAAO1B,EAAQgB,KAAK,OAAOqB,SAPX,SAAAC,GACzB,IAAMC,EAAcD,EAAEd,OAAOE,MAC7Bf,GAAS6B,EAAAA,EAAAA,GAAUD,GACpB,KAOF,ECRKE,EAAgBhC,EAAAA,GAAAA,QAAH,2OAoCnB,EAxBiB,WACf,IAAME,GAAWC,EAAAA,EAAAA,MACXhB,GAAYiB,EAAAA,EAAAA,IAAYlB,GACxBG,GAAQe,EAAAA,EAAAA,IAAYhB,GAK1B,OAHA6C,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,KAEF,UAAC8B,EAAD,YACE,0BAEE,SAAC,EAAD,OAEF,4BACE,sCACA,SAACL,EAAD,IACCxC,IAAa,+CACbE,IAAS,uBAAIA,KACd,SAACY,EAAD,SAIP,C","sources":["redux/contacts/selectors.js","components/contacts/ContacstList.jsx","components/phonebook/ContactsForm.jsx","components/filter/ContactsFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\nexport const selectContacts = state => state.phonebook.contacts.items;\nexport const selectIsLoading = state => state.phonebook.contacts.isLoading;\nexport const selectError = state => state.phonebook.contacts.error;\nexport const selectFilter = state => state.phonebook.filter;\nexport const getFilteredContacts = createSelector([selectContacts, selectFilter], (items, filter) => {\n    return items.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase().trim()))\n});","import styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-left: 0;\n  & li {\n    font-weight: 700;\n    font-size: large;\n    background-color: #3973a796;\n    border-radius: 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 10px;\n  }\n`;\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <StyledList>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button type=\"button\" onClick={() => handleDelete(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </StyledList>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  gap: 5px;\n  font-weight: 700;\n`;\n\nconst ContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    if (contacts.find(contact => contact.name === name)) {\n      alert('вже Є!');\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    event.target.reset();\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <label htmlFor=\"\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Example\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"+38 065 335 22 34\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\">Add contact</button>\n    </StyledForm>\n  );\n};\n\nexport default ContactsForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterUpdate = e => {\n    const filterValue = e.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <div>\n      <input value={filter} type=\"text\" onChange={handleFilterUpdate} />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\nimport { ContactsList } from '../components/contacts/ContacstList';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport ContactsForm from '../components/phonebook/ContactsForm';\nimport { ContactsFilter } from '../components/filter/ContactsFilter';\nimport styled from 'styled-components';\n\nconst StyledSection = styled.section`\n  font-family: 'Courier New', Courier, monospace;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <StyledSection>\n      <div>\n        {/* <h1>Your Phonebook</h1> */}\n        <ContactsForm />\n      </div>\n      <div>\n        <h2>Contacts</h2>\n        <ContactsFilter />\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        <ContactsList />\n      </div>\n    </StyledSection>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","phonebook","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","trim","StyledList","styled","ContactsList","dispatch","useDispatch","useSelector","map","number","type","onClick","id","deleteContact","StyledForm","onSubmit","event","preventDefault","target","elements","value","find","alert","addContact","reset","htmlFor","placeholder","pattern","title","required","ContactsFilter","onChange","e","filterValue","setFilter","StyledSection","useEffect","fetchContacts"],"sourceRoot":""}